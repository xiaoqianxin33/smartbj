

package com.itheima62.smartbj.activity;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;

import com.itheima62.smartbj.R;

/**
 * @author Administrator
 * @创建时间 2015-7-4 上午11:05:45
 * @描述 设置向导界面 ，采用Viewpager界面的切换
 * 
 *     @ svn提交者：$Author$ @ 提交时间: $Date$ @ 当前版本: $Rev$
 */
public class GuideActivity extends Activity
{
	private ViewPager	vp_guids;
	private LinearLayout	ll_points;
	private View	v_redpoint;
	private Button	bt_startExp;
	private List<ImageView>	guids;
	private MyAdapter	adapter;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);//去掉标题
		initView();//初始化界面
		
		initData();//初始化数据
	}

	private void initData() {
		//viewpaper adapter  list
		//图片的数据
		int[] pics = new int[]{R.drawable.guide_1,R.drawable.guide_2,R.drawable.guide_3};
		
		//定义Viewpager使用的容器
		
		guids = new ArrayList<ImageView>();
		
		
		//初始化容器中的数据
		for (int i = 0; i < pics.length; i++) {
			ImageView iv_temp = new ImageView(getApplicationContext());
			iv_temp.setBackgroundResource(pics[i]);
			
			//添加界面的数据
			guids.add(iv_temp);
		}
		//创建ViewPager的适配器
		adapter = new MyAdapter();
		
		//设置适配器
		vp_guids.setAdapter(adapter);
		
		
	}
	
	private class MyAdapter extends PagerAdapter{

		@Override
		public int getCount() {
			
			return guids.size();//返回数据的个数
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == arg1;//过滤和缓存的作用
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
			
			container.removeView((View) object);//从Viewpager中移除
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			//container viewpaper
			//获取View
			View child = guids.get(position);
			//添加View
			container.addView(child);//
			
			return child;
		}
		
		
	}

	private void initView() {
		setContentView(R.layout.activity_guide);
		
		//ViewPage组件
		vp_guids = (ViewPager) findViewById(R.id.vp_guide_pages);
		
		//动态加点容器
		ll_points = (LinearLayout) findViewById(R.id.ll_guide_points);
		
		//红点
		v_redpoint = findViewById(R.id.v_guide_redpoint);
		
		//开始体验的按钮
		bt_startExp = (Button) findViewById(R.id.bt_guide_startexp);
	}
}
